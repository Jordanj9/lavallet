openapi: 3.0.1
info:
  title: CANTERA API
  description: API .
  version: 1.0.0
servers:
  - url: 'http://127.0.0.1:8000/api'
tags:
  - name: Material
    description: Modulo de Materiales
    externalDocs:
      description: vds
      url: 'http://127.0.0.1:8000/api'
  - name: Cliente
    description: Modulo de Clientes
    externalDocs:
      description: Gestión de clientes
      url: 'http://127.0.0.1:8000/api'
  - name: Vehiculo
    description: Modulo de Vehiculo
    externalDocs:
      description: Gestiona la informacion de los vehiculos
      url: ''
  - name: Conductor
    description: Modulo de Conductor
    externalDocs:
      description: gestiona la informacion de los conductores
      url: ''
paths:
  #Cliente.......
  /cliente:
    get:
      tags:
        - Cliente
      summary: Obtener todos los clientes.
      description: hace una busqueda , y trae todos los cliente .
      responses:
        200:
          description: ok
    post:
      tags:
        - Cliente
      summary: Guardar cliente
      parameters:
        - name: id
          in: query
          description: Identificador del cliente
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre del cliente
          required: true
          schema:
            type: string
        - name: identificacion
          in: query
          description: Numero de identificacion del cliente
          required: true
          schema:
            type: string
        - name: departamento
          in: query
          description: Departamento de residencia
          required: true
          schema:
            type: string
        - name: municipio
          in: query
          description: Municipio del cliente
          required: true
          schema:
            type: string
        - name: direccion
          in: query
          description: Dirección del cliente
          required: true
          schema:
            type: string
        - name: telefono
          in: query
          description: Telefono del cliente
          required: true
          schema:
            type: integer
        - name: tipo
          in: query
          description: Tipo de persona (NATURAL,JURIDICA)
          required: true
          schema:
            enum:
              [ NATURAL,JURIDICA ]
      responses:
        201:
          description: El cliente se guardo correctamente
  /cliente/{id}:
    put:
      tags:
        - Cliente
      summary: Modificar cliente
      parameters:
        - name: id
          in: query
          description: Identificador del cliente
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre del cliente
          required: true
          schema:
            type: string
        - name: identificacion
          in: query
          description: Numero de identificacion del cliente
          required: true
          schema:
            type: string
        - name: departamento
          in: query
          description: Departamento de residencia
          required: true
          schema:
            type: string
        - name: municipio
          in: query
          description: Municipio del cliente
          required: true
          schema:
            type: string
        - name: direccion
          in: query
          description: Dirección del cliente
          required: true
          schema:
            type: string
        - name: telefono
          in: query
          description: Telefono del cliente
          required: true
          schema:
            type: integer
        - name: tipo
          in: query
          description: Tipo de persona
          required: true
          schema:
            enum:
              [ NATURAL,JURIDICA ]
      responses:
        200:
          description: El cliente se modifico correctamente
        400:
          description: Cliente duplicado
    delete:
      tags:
        - Cliente
      summary: Obtener Cliente por ID
      operationId: Realiza la busqueda del cliente por su identificacion o codigo Unico
      parameters:
        - name: id
          in: path
          description: Id del Cliente a Buscar
          required: true
          schema:
            type: string
      responses:
        200:
          description: El Cliente se elimino correctamente

  #Vehiculo......
  /vehiculo:
    get:
      tags:
        - Vehiculo
      summary: Obtener todos los Vehiculos.
      description: Hace una busqueda , y trae todos los Vehiculos .
      responses:
        200:
          description: ok
    post:
      tags:
        - Vehiculo
      summary: Guardar Vehiculo
      parameters:
        - name: id
          in: query
          description: Identificador del Vehiculo
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre del Vehiculo
          required: true
          schema:
            type: string
        - name: placa
          in: query
          description: Placa del Vehiculo
          required: true
          schema:
            type: string
        - name: tipo
          in: query
          description: Tipo del Vehiculo
          required: true
          schema:
            type: string
        - name: capacidad
          in: query
          description: Capacidad del Vehiculo
          required: true
          schema:
            type: integer
        - name: conductor_id
          in: query
          description: Identificador del Conductor_id
          required: true
          schema:
            type: string
      responses:
        201:
          description: El Vehiculo se guardo correctamente

  /vehiculo/{id}:
    put:
      tags:
        - Vehiculo
      summary: Modificar Vehiculo
      parameters:
        - name: id
          in: query
          description: Identificador del Vehiculo
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre del Vehiculo
          required: true
          schema:
            type: string
        - name: placa
          in: query
          description: Placa del Vehiculo
          required: true
          schema:
            type: string
        - name: tipo
          in: query
          description: Tipo del Vehiculo
          required: true
          schema:
            type: string
        - name: capacidad
          in: query
          description: Capacidad del Vehiculo
          required: true
          schema:
            type: integer
        - name: conductor_id
          in: query
          description: Identificador del Conductor_id
          required: true
          schema:
            type: string
      responses:
        201:
          description: El Vehiculo se guardo correctamente
    delete:
      tags:
        - Vehiculo
      summary: Obtener Vehiculo por ID
      operationId: Realiza la busqueda del Vehiculo por su identificacion o codigo Unico
      parameters:
        - name: id
          in: path
          description: Id del Vehiculo a Buscar
          required: true
          schema:
            type: string
      responses:
        200:
          description: El Vehiculo se elimino correctamente

  #Material.....
  /material:
    get:
      tags:
        - Material
      summary: Material obtener Material
      description: hace una busqueda , y trae todos los Material .
      responses:
        200:
          description: ok
    post:
      tags:
        - Material
      summary: Guardar material
      description: Guardar un material en la base de datos.
      parameters:
        - name: id
          in: query
          description: Identificador del material
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre del material
          required: true
          schema:
            type: string
      responses:
        201:
          description: El material se guardo correctamente
        400:
          description: Material duplicado
  /material/{id}:
    put:
      tags:
        - Material
      summary: Modificar Material
      parameters:
        - name: id
          in: path
          description: identificador del material
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: nombre del material
          required: true
          schema:
            type: string
            default: relleno
      responses:
        200:
          description: El material se guardo correctamente
        400:
          description: Material duplicado
    delete:
      tags:
        - Material
      summary: Eliminar un material
      parameters:
        - name: id
          in: path
          description: Identificador del material
          schema:
            type: string
      responses:
        200:
          description: El material se elimino correctamente
        404:
          description: Material no encontrado




        #componentes.....

  #conductor.....
  /conductor:
    get:
      tags:
        - Conductor
      summary: Obtener todos los conductores
      description: Realiza la consulta para traer todos los conductores
      responses:
        200:
          description: ok
    post:
      tags:
        - Conductor
      summary: Guardar conductor
      description: Guarda un conductor en la base de datos
      parameters:
        - name: id
          in: query
          description: Identificador del conductor
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre del conductor
          required: true
          schema:
            type: string
        - name: identificacion
          in: query
          description: Numero de identificacion del conductor
          required: true
          schema:
            type: string
        - name: telefono
          in: query
          description: Numero de telefono del conductor
          required: true
          schema:
            type: number
      responses:
        201:
          description: El conductor se guardo correctamente
        400:
          description: Conductor duplicado
  /conductor/{id}:
    get:
      tags:
        - Conductor
      summary: Buscar Conductor
      description: Buscar un conductor por id
      parameters:
        - name: id
          in: path
          description: Id del conductor
          required: true
          schema:
            type: string
      responses:
        200:
          description: ok
        404:
          description: Conductor no encontrado
    delete:
      tags:
        - Conductor
      summary: Obtener Conductor por ID
      operationId: Realiza la busqueda del conductor por su identificacion o codigo Unico
      parameters:
        - name: id
          in: path
          description: Id del Conductor a Buscar
          required: true
          schema:
            type: string
      responses:
        200:
          description: El Conductor se elimino correctamente


    put:
      tags:
        - Conductor
      summary: Modificar Conductor
      parameters:
        - name: id
          in: query
          description: Identificador del Conductor
          required: true
          schema:
            type: string
        - name: identificacion
          in: query
          description: Numero de identificacion del Conductor
          required: true
          schema:
            type: string
        - name: nombre
          in: query
          description: Nombre  del Conductor
          required: true
          schema:
            type: string
        - name: telefono
          in: query
          description: Telefono del Conductor
          required: true
          schema:
            type: integer
      responses:
        200:
          description: El Conductor se modifico correctamente
        400:
          description: Conductor duplicado

components:
  schemas:
    Clientes:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nombre:
          type: string
          format: byte
      xml:
        name: Order
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Category
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string
        userStatus:
          type: integer
          description: User Status
          format: int32
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    Pet:
      required:
        - name
        - photoUrls
      type: object
      properties:
        id:
          type: integer
          format: int64
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          example: doggie
        photoUrls:
          type: array
          xml:
            name: photoUrl
            wrapped: true
          items:
            type: string
        tags:
          type: array
          xml:
            name: tag
            wrapped: true
          items:
            $ref: '#/components/schemas/Tag'
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
      xml:
        name: Pet
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: http://petstore.swagger.io/oauth/dialog
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header
